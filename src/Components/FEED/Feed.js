import React, { useState } from 'react';
import './feed.css';
import axios from 'axios';
import { useNavigate } from 'react-router-dom';

function Feed() {
  const navigate = useNavigate();
  const [parentName, setParentName] = useState('');
  const [startTime, setStartTime] = useState('');
  const [stopTime, setStopTime] = useState('');
  const [breastSide, setBreastSide] = useState('');
  const [supplement, setSupplement] = useState('');
  const [painLevel, setPainLevel] = useState(0);
  const [nippleShape, setNippleShape] = useState('');
  const [nippleColor, setNippleColor] = useState('');
  const [milkBlister, setMilkBlister] = useState('');
  const [nippleCracks, setNippleCracks] = useState('');
  const [feelings, setFeelings] = useState('');
  const [presentWeight, setPresentWeight] = useState('');

 const AddFeedInfo = async () => {
    try {
      const formField = {
        parentName,
        startTime,
        stopTime,
        breastSide,
        supplement,
        painLevel,
        nippleShape,
        nippleColor,
        milkBlister,
        nippleCracks,
        feelings,
        presentWeight,
      };
  
      const response = await axios.post('https://immense-inlet-39795-a0ed7f5bb9f7.herokuapp.com/breastfeed-detail/', formField);
      console.log(response.data);
      navigate('/profile');
    } catch (error) {
      console.error('Error:', error);
    }
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    console.log(parentName, startTime, stopTime, breastSide, supplement, painLevel, nippleShape, nippleColor, milkBlister, nippleCracks, feelings);
    setParentName('');
    setStartTime('');
    setStopTime('');
    setBreastSide('');
    setSupplement('');
    setPainLevel(0);
    setNippleShape('');
    setNippleColor('');
    setMilkBlister('');
    setNippleCracks('');
    setFeelings('');
    setPresentWeight('');

  };

  return (
    <div className='feed'>
      <div className='headingfeed'>

        <h2>родро╛ропрпНрокрпНрокро╛ро▓рпН роХрпКроЯрпБроХрпНроХрпБроорпН ро╡ро┐рокро░роЩрпНроХро│рпН</h2>


      </div>
      <form onSubmit={handleSubmit}>

        <div>
          <label htmlFor="parentName">роХрпБро┤роирпНродрпИропро┐ройрпН родро╛ропро╛ро░рпН рокрпЖропро░рпН:</label>
          <input type="text" id="parentName" value={parentName} onChange={(e) => setParentName(e.target.value)} />
        </div>
        <div>
          <label htmlFor="startTime">рокро╛ро▓рпВроЯрпНроЯро▓рпН родрпКроЯроХрпНроХ роирпЗро░роорпН:</label>
          <input type="time" id="startTime" value={startTime} onChange={(e) => setStartTime(e.target.value)} />
        </div>
        <div>
          <label htmlFor="stopTime">рокро╛ро▓рпВроЯрпНроЯро▓рпН роорпБроЯро┐ро╡рпБ роирпЗро░роорпН:</label>
          <input type="time" id="stopTime" value={stopTime} onChange={(e) => setStopTime(e.target.value)} />
        </div>
        <div>
          <label htmlFor="breastSide"> роХрпБро┤роирпНродрпИроХрпНроХрпБрокро╛ро▓рпВроЯрпНроЯ роОроирпНрод рооро╛ро░рпНрокроХродрпНродрпИрокрпН рокропройрпНрокроЯрпБродрпНродро┐ройрпАро░рпНроХро│рпН?</label>
          <select id="breastSide" value={breastSide} onChange={(e) => setBreastSide(e.target.value)}>
            <option value="">родрпЗро░рпНроирпНродрпЖроЯрпБ </option>
            <option value="роЗроЯродрпБ">роЗроЯродрпБ</option>
            <option value="ро╡ро▓родрпБ">ро╡ро▓родрпБ</option>
            <option value="роЗро░рогрпНроЯрпБроорпН роЗро▓рпНро▓рпИ">роЗро░рогрпНроЯрпБроорпН роЗро▓рпНро▓рпИ</option>
            <option value="роЗро░рогрпНроЯрпБроорпН">роЗро░рогрпНроЯрпБроорпН</option>
          </select>
        </div>
        <div>
          <label htmlFor="supplement">роЙроЩрпНроХро│рпН роХрпБро┤роирпНродрпИроХрпНроХрпБ роОрокрпНрокроЯро┐ рокро╛ро▓рпН роХрпКроЯрпБродрпНродрпАро░рпНроХро│рпН?</label>
          <select id="supplement" value={supplement} onChange={(e) => setSupplement(e.target.value)}>
            <option value="">родрпЗро░рпНроирпНродрпЖроЯрпБ </option>
            <option value="родро╛ропрпНрокрпНрокро╛ро▓рпН">родро╛ропрпНрокрпНрокро╛ро▓рпНЁЯд▒ЁЯП╗</option>
            <option value="рокро╡рпБроЯро░рпНрокро╛ро▓рпН">рокро╡рпБроЯро░рпНрокро╛ро▓рпНЁЯН╝</option>
          </select>
        </div>
        <div>
          <label htmlFor="painLevel">родро╛ропрпНрокрпНрокро╛ро▓рпН роХрпКроЯрпБроХрпНроХрпБроорпН рокрпЛродрпБ роПродрпЗройрпБроорпН ро╡ро▓ро┐ропрпИ роЙрогро░рпНроирпНродрпАро░рпНроХро│ро╛?</label>
          <input type="range" id="painLevel" min="0" max="10" value={painLevel} onChange={(e) => setPainLevel(parseInt(e.target.value))} />
          <span>{painLevel} ({painLevel === 0 ? 'ро╡ро▓ро┐ роЗро▓рпНро▓рпИ' : painLevel >= 1 && painLevel <= 3 ? 'роХрпБро▒рпИроирпНрод ро╡ро▓ро┐' : painLevel >= 4 && painLevel <= 6 ? 'роироЯрпБродрпНродро░ ро╡ро▓ро┐' : 'роЕродро┐роХ ро╡ро▓ро┐'})</span>
        </div>
        <div>
          <label htmlFor="nippleShape">роорпБро▓рпИроХрпНроХро╛роорпНрокро┐ройрпН ро╡роЯро┐ро╡роорпН роОройрпНрой?</label>
          <select id="nippleShape" value={nippleShape} onChange={(e) => setNippleShape(e.target.value)}>
            <option value="">родрпЗро░рпНроирпНродрпЖроЯрпБ </option>
            <option value="ро╡роЯрпНроЯ ро╡роЯро┐ро╡ роорпБро▓рпИроХрпНроХро╛роорпНрокрпБ">ро╡роЯрпНроЯ ро╡роЯро┐ро╡ роорпБро▓рпИроХрпНроХро╛роорпНрокрпБ</option>
            <option value="роХрпВроорпНрокрпБро╡роЯро┐ро╡ роорпБро▓рпИроХрпНроХро╛роорпНрокрпБ">роХрпВроорпНрокрпБро╡роЯро┐ро╡ роорпБро▓рпИроХрпНроХро╛роорпНрокрпБ</option>
          </select>
        </div>
        <div>
          <label htmlFor="nippleColor">родро╛ропрпНрокрпНрокро╛ро▓рпН роХрпКроЯрпБродрпНродрокро┐ройрпН роорпБро▓рпИроХрпНроХро╛роорпНрокро┐ройрпН роиро┐ро▒роорпН роОройрпНрой?</label>
          <select id="nippleColor" value={nippleColor} onChange={(e) => setNippleColor(e.target.value)}>
            <option value="">родрпЗро░рпНроирпНродрпЖроЯрпБ </option>
            <option value="роХро░рпБрокрпНрокрпБ роиро┐ро▒роорпН">роХро░рпБрокрпНрокрпБ роиро┐ро▒роорпН</option>
            <option value="ро╡рпЖро│рпНро│рпИ роиро┐ро▒роорпН">ро╡рпЖро│рпНро│рпИ роиро┐ро▒роорпН</option>
            <option value="роЪро┐ро╡рокрпНрокрпБ роиро┐ро▒роорпН">роЪро┐ро╡рокрпНрокрпБ роиро┐ро▒роорпН</option>
          </select>
        </div>
        <div>
          <label htmlFor="milkBlister">роЙроЩрпНроХро│рпН рооро╛ро░рпНрокроХроЩрпНроХро│ро┐ро▓рпН роПродрпЗройрпБроорпН рокрпБрогрпН роЗро░рпБроХрпНроХро┐ро▒родро╛?</label>
          <select id="milkBlister" value={milkBlister} onChange={(e) => setMilkBlister(e.target.value)}>
            <option value="">родрпЗро░рпНроирпНродрпЖроЯрпБ </option>
            <option value="роЗро▓рпНро▓рпИ">роЗро▓рпНро▓рпИ</option>
            <option value="роЖроорпН">роЖроорпН</option>
          </select>
        </div>
        <div>
          <label htmlFor="nippleCracks">роЙроЩрпНроХро│рпН роорпБро▓рпИроХрпНроХро╛роорпНрокрпБроХро│ро┐ро▓рпН роПродрпЗройрпБроорпН ро╡ро┐ро░ро┐роЪро▓рпН роЗро░рпБроХрпНроХро┐ро▒родро╛?</label>
          <select id="nippleCracks" value={nippleCracks} onChange={(e) => setNippleCracks(e.target.value)}>
            <option value="">родрпЗро░рпНроирпНродрпЖроЯрпБ </option>
            <option value="роЗро▓рпНро▓рпИ">роЗро▓рпНро▓рпИ</option>
            <option value="роЖроорпН">роЖроорпН</option>
          </select>
        </div>
        <div>
          <label htmlFor="feelings">роирпАроЩрпНроХро│рпН роОрокрпНрокроЯро┐ роЙрогро░рпБроХро┐ро▒рпАро░рпНроХро│рпН?</label>
          <select id="feelings" value={feelings} onChange={(e) => setFeelings(e.target.value)}>
            <option value="">родрпЗро░рпНроирпНродрпЖроЯрпБ </option>
            <option value="роиро┐роорпНроородро┐ропро╛роХ">роиро┐роорпНроородро┐ропро╛роХЁЯШЗ</option>
            <option value="роороХро┐ро┤рпНроЪрпНроЪро┐ропро╛рой роЙрогро░рпНро╡рпБ">роороХро┐ро┤рпНроЪрпНроЪро┐ропро╛рой роЙрогро░рпНро╡рпБЁЯША</option>
            <option value="роЪрпЛроХ роЙрогро░рпНро╡рпБ">роЪрпЛроХ роЙрогро░рпНро╡рпБЁЯШФ</option>
            <option value="родрпАро░рпНроирпНродрпБ рокрпЛрой роЙрогро░рпНро╡рпБ">родрпАро░рпНроирпНродрпБ рокрпЛрой роЙрогро░рпНро╡рпБЁЯдп</option>
            <option value="роХро╡ро▓рпИ роЙрогро░рпНро╡рпБ">роХро╡ро▓рпИ роЙрогро░рпНро╡рпБЁЯШ░</option>
          </select>
        </div>
        <div>
          <label htmlFor="presentWeight">роХрпБро┤роирпНродрпИропро┐ройрпН родро▒рпНрокрпЛродрпИроп роОроЯрпИ (роХро┐ро▓рпЛроХро┐ро░ро╛рооро┐ро▓рпН):</label>
          <input type="text" id="presentWeight" value={presentWeight} onChange={(e) => setPresentWeight(e.target.value)} />
        </div>

        <button type="submit" onClick={AddFeedInfo}>роЪро░ро┐</button>
      </form>
    </div>
  );
}

export default Feed;
